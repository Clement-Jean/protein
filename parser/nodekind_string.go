// Code generated by "stringer -type=NodeKind -linecomment"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[NodeKindUndefined-0]
	_ = x[NodeKindImportStmt-1]
	_ = x[NodeKindPackageStmt-2]
	_ = x[NodeKindMessageClose-3]
	_ = x[NodeKindMessageOneOfDecl-4]
	_ = x[NodeKindMessageFieldDecl-5]
	_ = x[NodeKindEnumValueDecl-6]
	_ = x[NodeKindMapValue-7]
	_ = x[NodeKindMessageDecl-8]
	_ = x[NodeKindEnumDecl-9]
	_ = x[NodeKindServiceDecl-10]
}

const _NodeKind_name = "UndefinedImportStmtPackageStmtMessageCloseOneOfDeclFieldDeclValueDeclMapValueMessageDeclEnumDeclServiceDecl"

var _NodeKind_index = [...]uint8{0, 9, 19, 30, 42, 51, 60, 69, 77, 88, 96, 107}

func (i NodeKind) String() string {
	if i >= NodeKind(len(_NodeKind_index)-1) {
		return "NodeKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeKind_name[_NodeKind_index[i]:_NodeKind_index[i+1]]
}
