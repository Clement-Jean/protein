// Code generated by "stringer -type=state"; DO NOT EDIT.

package parser

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[stateTopLevel-0]
	_ = x[stateSyntaxAssign-1]
	_ = x[stateSyntaxFinish-2]
	_ = x[stateEditionAssign-3]
	_ = x[stateEditionFinish-4]
	_ = x[stateImportValue-5]
	_ = x[stateImportFinish-6]
	_ = x[statePackageFinish-7]
	_ = x[stateOptionName-8]
	_ = x[stateOptionNameRest-9]
	_ = x[stateOptionNameParenFinish-10]
	_ = x[stateOptionAssign-11]
	_ = x[stateOptionEqual-12]
	_ = x[stateOptionFinish-13]
	_ = x[stateTextFieldValue-14]
	_ = x[stateTextFieldAssign-15]
	_ = x[stateTextFieldName-16]
	_ = x[stateTextFieldExtensionName-17]
	_ = x[stateTextFieldExtensionNameFinish-18]
	_ = x[stateTextMessageValue-19]
	_ = x[stateTextMessageInsertSemicolon-20]
	_ = x[stateTextMessageFinishRightBrace-21]
	_ = x[stateTextMessageFinishRightAngle-22]
	_ = x[stateTextListValue-23]
	_ = x[stateTextListFinish-24]
	_ = x[stateMessageBlock-25]
	_ = x[stateMessageFieldAssign-26]
	_ = x[stateMessageFieldOption-27]
	_ = x[stateMessageFieldOptionAssign-28]
	_ = x[stateMessageFieldOptionFinish-29]
	_ = x[stateMessageFieldFinish-30]
	_ = x[stateMessageMapStart-31]
	_ = x[stateMessageMapKeyValue-32]
	_ = x[stateMessageMapComma-33]
	_ = x[stateMessageMapFinish-34]
	_ = x[stateMessageValue-35]
	_ = x[stateMessageFinish-36]
	_ = x[stateReservedRange-37]
	_ = x[stateReservedName-38]
	_ = x[stateReservedFinish-39]
	_ = x[stateOneofBlock-40]
	_ = x[stateOneofValue-41]
	_ = x[stateOneofFinish-42]
	_ = x[stateEnumBlock-43]
	_ = x[stateEnumValue-44]
	_ = x[stateEnumFinish-45]
	_ = x[stateServiceBlock-46]
	_ = x[stateServiceValue-47]
	_ = x[stateServiceFinish-48]
	_ = x[stateRPCDefinition-49]
	_ = x[stateRPCReqRes-50]
	_ = x[stateRPCReqResFinish-51]
	_ = x[stateRPCValue-52]
	_ = x[stateRPCFinish-53]
	_ = x[stateIdentifier-54]
	_ = x[stateFullIdentifierRoot-55]
	_ = x[stateFullIdentifierRest-56]
	_ = x[stateEnder-57]
}

const _state_name = "stateTopLevelstateSyntaxAssignstateSyntaxFinishstateEditionAssignstateEditionFinishstateImportValuestateImportFinishstatePackageFinishstateOptionNamestateOptionNameReststateOptionNameParenFinishstateOptionAssignstateOptionEqualstateOptionFinishstateTextFieldValuestateTextFieldAssignstateTextFieldNamestateTextFieldExtensionNamestateTextFieldExtensionNameFinishstateTextMessageValuestateTextMessageInsertSemicolonstateTextMessageFinishRightBracestateTextMessageFinishRightAnglestateTextListValuestateTextListFinishstateMessageBlockstateMessageFieldAssignstateMessageFieldOptionstateMessageFieldOptionAssignstateMessageFieldOptionFinishstateMessageFieldFinishstateMessageMapStartstateMessageMapKeyValuestateMessageMapCommastateMessageMapFinishstateMessageValuestateMessageFinishstateReservedRangestateReservedNamestateReservedFinishstateOneofBlockstateOneofValuestateOneofFinishstateEnumBlockstateEnumValuestateEnumFinishstateServiceBlockstateServiceValuestateServiceFinishstateRPCDefinitionstateRPCReqResstateRPCReqResFinishstateRPCValuestateRPCFinishstateIdentifierstateFullIdentifierRootstateFullIdentifierReststateEnder"

var _state_index = [...]uint16{0, 13, 30, 47, 65, 83, 99, 116, 134, 149, 168, 194, 211, 227, 244, 263, 283, 301, 328, 361, 382, 413, 445, 477, 495, 514, 531, 554, 577, 606, 635, 658, 678, 701, 721, 742, 759, 777, 795, 812, 831, 846, 861, 877, 891, 905, 920, 937, 954, 972, 990, 1004, 1024, 1037, 1051, 1066, 1089, 1112, 1122}

func (i state) String() string {
	if i >= state(len(_state_index)-1) {
		return "state(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _state_name[_state_index[i]:_state_index[i+1]]
}
