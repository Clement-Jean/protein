// Code generated by "stringer -type=TokenKind -linecomment"; DO NOT EDIT.

package lexer

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[TokenKindEOF-0]
	_ = x[TokenKindBOF-1]
	_ = x[TokenKindError-2]
	_ = x[TokenKindComment-3]
	_ = x[TokenKindUnderscore-4]
	_ = x[TokenKindEqual-5]
	_ = x[TokenKindComma-6]
	_ = x[TokenKindColon-7]
	_ = x[TokenKindSemicolon-8]
	_ = x[TokenKindDot-9]
	_ = x[TokenKindLeftBrace-10]
	_ = x[TokenKindLeftSquare-11]
	_ = x[TokenKindLeftParen-12]
	_ = x[TokenKindLeftAngle-13]
	_ = x[TokenKindRightBrace-14]
	_ = x[TokenKindRightSquare-15]
	_ = x[TokenKindRightParen-16]
	_ = x[TokenKindRightAngle-17]
	_ = x[TokenKindSlash-18]
	_ = x[TokenKindInt-19]
	_ = x[TokenKindFloat-20]
	_ = x[TokenKindStr-21]
	_ = x[TokenKindIdentifier-128]
	_ = x[TokenKindTypeBool-129]
	_ = x[TokenKindTypeBytes-130]
	_ = x[TokenKindTypeDouble-131]
	_ = x[TokenKindEdition-132]
	_ = x[TokenKindEnum-133]
	_ = x[TokenKindExtend-134]
	_ = x[TokenKindExtensions-135]
	_ = x[TokenKindFalse-136]
	_ = x[TokenKindTypeFixed32-137]
	_ = x[TokenKindTypeFixed64-138]
	_ = x[TokenKindTypeFloat-139]
	_ = x[TokenKindImport-140]
	_ = x[TokenKindTypeInt32-141]
	_ = x[TokenKindTypeInt64-142]
	_ = x[TokenKindMap-143]
	_ = x[TokenKindMax-144]
	_ = x[TokenKindMessage-145]
	_ = x[TokenKindOneOf-146]
	_ = x[TokenKindOption-147]
	_ = x[TokenKindOptional-148]
	_ = x[TokenKindPackage-149]
	_ = x[TokenKindPublic-150]
	_ = x[TokenKindRepeated-151]
	_ = x[TokenKindRequired-152]
	_ = x[TokenKindReserved-153]
	_ = x[TokenKindReturns-154]
	_ = x[TokenKindRPC-155]
	_ = x[TokenKindService-156]
	_ = x[TokenKindTypeSfixed32-157]
	_ = x[TokenKindTypeSfixed64-158]
	_ = x[TokenKindTypeSint32-159]
	_ = x[TokenKindTypeSint64-160]
	_ = x[TokenKindStream-161]
	_ = x[TokenKindTypeString-162]
	_ = x[TokenKindSyntax-163]
	_ = x[TokenKindTo-164]
	_ = x[TokenKindTrue-165]
	_ = x[TokenKindTypeUint32-166]
	_ = x[TokenKindTypeUint64-167]
	_ = x[TokenKindWeak-168]
}

const (
	_TokenKind_name_0 = "EOFBOFErrorComment_=,:;.{[(<}])>/IntegerFloatString"
	_TokenKind_name_1 = "Identifierboolbytesdoubleeditionenumextendextensionsfalsefixed32fixed64floatimportint32int64mapmaxmessageoneofoptionoptionalpackagepublicrepeatedrequiredreservedreturnsrpcservicesfixed32sfixed64sint32sint64streamstringsyntaxtotrueuint32uint64weak"
)

var (
	_TokenKind_index_0 = [...]uint8{0, 3, 6, 11, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 40, 45, 51}
	_TokenKind_index_1 = [...]uint8{0, 10, 14, 19, 25, 32, 36, 42, 52, 57, 64, 71, 76, 82, 87, 92, 95, 98, 105, 110, 116, 124, 131, 137, 145, 153, 161, 168, 171, 178, 186, 194, 200, 206, 212, 218, 224, 226, 230, 236, 242, 246}
)

func (i TokenKind) String() string {
	switch {
	case i <= 21:
		return _TokenKind_name_0[_TokenKind_index_0[i]:_TokenKind_index_0[i+1]]
	case 128 <= i && i <= 168:
		i -= 128
		return _TokenKind_name_1[_TokenKind_index_1[i]:_TokenKind_index_1[i+1]]
	default:
		return "TokenKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
}
